<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:cfg="clr-namespace:Quickr.ViewModels.Configuration"
    mc:Ignorable="d">
    <Style x:Key="SidePageScroll" TargetType="ScrollViewer">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="10,-5,2,5" />
    </Style>
    <Style TargetType="GroupBox">
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="#FFABADB3" />
    </Style>
    <Style TargetType="Button">
        <Setter Property="Padding" Value="15,5" />
        <Setter Property="Margin" Value="2" />
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="1,2" />
        <Setter Property="Padding" Value="2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSaveFailed}" Value="True">
                <Setter Property="BorderBrush" Value="Red" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Config.IsReadOnly}" Value="True">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="#EEEEEE" />
                <Setter Property="BorderBrush" Value="#D9D9D9" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ComboBox">
        <Setter Property="Margin" Value="1,0" />
        <Setter Property="Background" Value="#F5F5F5" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSaveFailed}" Value="True">
                <Setter Property="BorderBrush" Value="Red" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Config.IsReadOnly}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="IsEditable" Value="False" />
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="Background" Value="#EEEEEE" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Config.IsReadOnly}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="#EEEEEE" />
                <Setter Property="BorderBrush" Value="#D9D9D9" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSaveFailed}" Value="True">
                <Setter Property="BorderBrush" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TextBlock" x:Key="*">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="OrangeRed" />
        <Setter Property="Text" Value="*" />
        <Setter Property="Margin" Value="3,0" />
    </Style>
    <Style x:Key="Description" TargetType="TextBlock">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="#505050" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <ControlTemplate x:Key="Label" TargetType="Label">
        <StackPanel Margin="0,5,3,0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" d:DataContext="{d:DesignInstance cfg:StringPropertyModel}">
            <TextBlock Style="{StaticResource *}" Visibility="{Binding Path=IsPropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <TextBlock Text="{TemplateBinding Content}" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="Text" TargetType="TextBox">
        <StackPanel Margin="0,0,0,5" d:DataContext="{d:DesignInstance cfg:StringPropertyModel}">
            <TextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" MaxLength="{TemplateBinding MaxLength}" />
            <TextBlock Text="{Binding Path=Config.Description}" Style="{StaticResource Description}" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="Combo" TargetType="ComboBox">
        <StackPanel Margin="0,3,0,5" d:DataContext="{d:DesignInstance cfg:StringPropertyModel}">
            <ComboBox ItemsSource="{Binding Path=Config.PossibleValues}" SelectedItem="{Binding Path=Value}" />
            <TextBlock Text="{Binding Path=Config.Description}" Style="{StaticResource Description}" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="TextN" TargetType="TextBox">
        <StackPanel Margin="0,0,0,5" d:DataContext="{d:DesignInstance cfg:StringPropertyModel}">
            <TextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" MaxLength="{TemplateBinding MaxLength}" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="YesNo" TargetType="CheckBox">
        <StackPanel Margin="0,5,0,8" d:DataContext="{d:DesignInstance cfg:YesNoPropertyModel}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <CheckBox Content="{TemplateBinding Content}" IsChecked="{Binding Path=IsYes}" />
                <TextBlock Style="{StaticResource *}" Visibility="{Binding Path=IsPropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>
            <TextBlock Text="{Binding Path=Config.Description}" Style="{StaticResource Description}" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="YesNoN" TargetType="CheckBox">
        <StackPanel Margin="0,0,0,0" d:DataContext="{d:DesignInstance cfg:YesNoPropertyModel}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <CheckBox Content="{TemplateBinding Content}" IsChecked="{Binding Path=IsYes}" VerticalContentAlignment="Center" />
                <TextBlock Style="{StaticResource *}" Visibility="{Binding Path=IsPropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>
        </StackPanel>
    </ControlTemplate>
</ResourceDictionary>